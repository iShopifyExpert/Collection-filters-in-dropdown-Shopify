<section class="custom-filter-box">
<div class="custom-filter-inner">
  <ul id="sortme">
    {% if section.settings.sort_by %}
    <li class="clearfix filter">
      <label for="SortBy" class="label-hidden">{{ 'collections.sorting.title' | t }}</label>
      <select name="SortBy" id="SortBy" class="styled-select">
        <option value="title-ascending"{% if sort_by == collection.default_sort_by %} selected="selected"{% endif %}>{{ 'collections.sorting.title' | t }}</option>{% for option in collection.sort_options %}
        <option value="{{ option.value }}" {% unless default_sorted %}{% if option.value == sort_by %}selected="selected"{% endif %}{% endunless %}>{{ option.name }}</option>{% endfor %}
      </select>
    </li>
    <script>
      Shopify.queryParams = {};
      if (location.search.length) {
        for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
          aKeyValue = aCouples[i].split('=');
          if (aKeyValue.length > 1) {
            Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
          }
        }
      }
      jQuery('#SortBy').val('{{ collection.sort_by | default: collection.default_sort_by  }}').bind('change', function() {
        Shopify.queryParams.sort_by = jQuery(this).val();
        location.search = jQuery.param(Shopify.queryParams);
      });
    </script>
    {% endif %}
    {% if section.blocks.size > 0 %}
    {% for block in section.blocks %}
    {% if block.settings.show_dropdown %}
    <li class="clearfix filter" {{ block.shopify_attributes }}>
      {% assign tags = block.settings.filters  | replace: ' ,', ',' | replace: ', ', ',' | split: ',' %}
      <label for="{{ block.settings.title | handle }}" class="label-hidden">{{ block.settings.title | escape }}</label>
      <select name="{{ block.settings.title | handle }}" id="{{ block.settings.title | handle }}" class="styled-select coll-filter">
        <option value="">All</option>{% for tag in tags %}{% if current_tags contains tag %}
        <option value="{{ tag | handle }}" selected>{{ tag }}</option>{% elsif collection.all_tags contains tag %}
        <option value="{{ tag | handle }}">{{ tag }}</option>{% endif %}{% endfor %}
      </select>
    </li>
    {% endif %}
    {% endfor %}
    {% endif %}
  </ul>              
</div>
</section>
{% schema %}
  {
    "name": "Collection Filters",
    "class": "collection-section",
    "max_blocks": 10,
    "settings": [
      {
        "type": "checkbox",
        "id": "sort_by",
        "label": "Enable Sort By",
        "default": true,
        "info": "Sort By Atoz etc."
      },
      {
        "type": "checkbox",
        "id": "sort_label",
        "label": "Show Label",
        "default": true
      }
    ],
    "blocks": [
      {
        "type": "dropdown",
        "name": "Dropdown",
        "settings": [
          {
            "type": "checkbox",
            "id": "show_dropdown",
            "label": "Show Dropdown",
            "default": true
          },
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Size"
          },
          {
            "type": "textarea",
            "id": "filters",
            "label": "All tags for this filter",
            "info": "Qoma seprate tags here"
          }
        ]
      }
    ]
  }
{% endschema %}
<script>
  /* Product Tag Filters - Good for any number of filters on any type of collection pages */
  /* Give you product tag filter select element a class of coll-filter */
  /* Give your collection select a class of coll-picker */
  /* Brought to you by Caroline Schnapp */
  var allFilters = jQuery('.coll-filter, .coll-picker');
  allFilters.change(function() {
    var newTags = [];
    jQuery('.coll-filter').each(function() { 
      if (jQuery(this).val()) {
        newTags.push(jQuery(this).val());
      }
    });
    if (newTags.length) {
      var query = newTags.join('+');
      if (jQuery('.coll-picker').length) {
        window.location.href = '/collections/' + jQuery('.coll-picker').val() + '/' + query;
      }
      else {
        window.location.href = jQuery('{{ 'tag' | link_to_tag: 'tag' }}').attr('href').replace('tag', query);
      }
    } 
    else {
      if (jQuery('.coll-picker').length) {
        window.location.href = '/collections/' + jQuery('.coll-picker').val();
      }
      else {
        {% if collection.handle %}
        window.location.href = '/collections/{{ collection.handle }}';
        {% elsif collection.products.first.type == collection.title %}
        window.location.href = '{{ collection.title | url_for_type }}';
        {% elsif collection.products.first.vendor == collection.title %}
        window.location.href = '{{ collection.title | url_for_vendor }}';
        {% endif %}
      }
    }
  });
</script>
<style>
.custom-filter-box {
    background-color: #eee;
    padding: 50px 20px;
    display: inline-block;
    width: 100%;
    margin: 0px 0 10px;
}
@media only screen and (min-width: 768px) {
  ul#sortme {
    margin-bottom: 0;
  }
  .styled-select {
    min-width: 12rem;
    background-color: #fff;
  } {% if section.settings.sort_label == false %}
  .label-hidden {
    display: none;
  } {% endif %}
}
@media only screen and (max-width: 767px) {
  ul#sortme {
    margin: 0;
  }
  .custom-filter-box ul li {
    width: 100%;
  }
  .styled-select {
    width: 100%;
    background-color: #fff;
  } {% if section.settings.sort_label == false %}
  .label-hidden {
    display: none;
  } {% endif %}
}
</style>
